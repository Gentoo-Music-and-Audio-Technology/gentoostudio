--- a/libshout-idjc/Makefile.am
+++ b/libshout-idjc/Makefile.am
@@ -5,7 +5,7 @@ ACLOCAL_AMFLAGS = -I m4
 
 SUBDIRS = include src
 
-EXTRA_DIST = INSTALL m4/shout.m4 m4/acx_pthread.m4 \
+EXTRA_DIST = INSTALL m4/shoutidjc.m4 m4/acx_pthread.m4 \
 	m4/ogg.m4 m4/vorbis.m4 m4/xiph_compiler.m4 m4/xiph_net.m4 \
 	m4/xiph_types.m4
 
@@ -13,7 +13,7 @@ docdir = $(datadir)/doc/$(PACKAGE)
 doc_DATA = COPYING NEWS README
 
 m4datadir = $(datadir)/aclocal
-m4data_DATA = m4/shout.m4
+m4data_DATA = m4/shoutidjc.m4
 
 if HAVE_PKGCONFIG
   pkgconfigdir = $(libdir)/pkgconfig
diff --git a/libshout-idjc/m4/shout.m4 b/libshout-idjc/m4/shout.m4
deleted file mode 100644
index a3104f2..0000000
--- a/libshout-idjc/m4/shout.m4
+++ /dev/null
@@ -1,79 +0,0 @@
-dnl XIPH_PATH_SHOUT
-dnl Jack Moffitt <jack@icecast.org> 08-06-2001
-dnl Rewritten for libshout 2
-dnl Brendan Cully <brendan@xiph.org> 20030612
-dnl 
-dnl $Id$
-
-# XIPH_PATH_SHOUT([ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])
-# Test for libshout, and define SHOUT_CPPFLAGS SHOUT_CFLAGS SHOUT_LIBS, and
-# SHOUT_THREADSAFE
-AC_DEFUN([XIPH_PATH_SHOUT],
-[dnl
-xt_have_shout="no"
-SHOUT_THREADSAFE="no"
-SHOUT_CPPFLAGS=""
-SHOUT_CFLAGS=""
-SHOUT_LIBS=""
-
-# NB: PKG_CHECK_MODULES exits if pkg-config is unavailable on the target
-# system, so we can't use it.
-
-# seed pkg-config with the default libshout location
-PKG_CONFIG_PATH=${PKG_CONFIG_PATH:-/usr/local/lib/pkgconfig}
-export PKG_CONFIG_PATH
-
-# Step 1: Use pkg-config if available
-AC_PATH_PROG([PKGCONFIG], [pkg-config], [no])
-if test "$PKGCONFIG" != "no" && `$PKGCONFIG --exists shout`
-then
-  SHOUT_CFLAGS=`$PKGCONFIG --variable=cflags_only shout`
-  SHOUT_CPPFLAGS=`$PKGCONFIG --variable=cppflags shout`
-  SHOUT_LIBS=`$PKGCONFIG --libs shout`
-  xt_have_shout="maybe"
-else
-  if test "$PKGCONFIG" != "no"
-  then
-    AC_MSG_NOTICE([$PKGCONFIG could not find libshout. Try adjusting PKG_CONFIG_PATH.])
-  fi
-  # pkg-config unavailable, try shout-config
-  AC_PATH_PROG([SHOUTCONFIG], [shout-config], [no])
-  if test "$SHOUTCONFIG" != "no" && test `$SHOUTCONFIG --package` = "libshout"
-  then
-    SHOUT_CPPFLAGS=`$SHOUTCONFIG --cppflags`
-    SHOUT_CFLAGS=`$SHOUTCONFIG --cflags-only`
-    SHOUT_LIBS=`$SHOUTCONFIG --libs`
-    xt_have_shout="maybe"
-  fi
-fi
-
-# Now try actually using libshout
-if test "$xt_have_shout" != "no"
-then
-  ac_save_CPPFLAGS="$CPPFLAGS"
-  ac_save_CFLAGS="$CFLAGS"
-  ac_save_LIBS="$LIBS"
-  CPPFLAGS="$CPPFLAGS $SHOUT_CPPFLAGS"
-  CFLAGS="$CFLAGS $SHOUT_CFLAGS"
-  LIBS="$SHOUT_LIBS $LIBS"
-  AC_CHECK_HEADERS([shoutidjc/shout.h], [
-    AC_CHECK_FUNC([shout_new], [
-      ifelse([$1], , :, [$1])
-      xt_have_shout="yes"
-    ])
-    AC_EGREP_CPP([yes], [#include <shoutidjc/shout.h>
-#if SHOUT_THREADSAFE
-yes
-#endif
-], [SHOUT_THREADSAFE="yes"])
-  ])
-  CPPFLAGS="$ac_save_CPPFLAGS"
-  CFLAGS="$ac_save_CFLAGS"
-  LIBS="$ac_save_LIBS"
-fi
-
-if test "$xt_have_shout" != "yes"
-then
-  ifelse([$2], , :, [$2])
-fi
-])dnl XIPH_PATH_SHOUT
diff --git a/libshout-idjc/m4/shoutidjc.m4 b/libshout-idjc/m4/shoutidjc.m4
new file mode 100644
index 0000000..a3104f2
--- /dev/null
+++ b/libshout-idjc/m4/shoutidjc.m4
@@ -0,0 +1,79 @@
+dnl XIPH_PATH_SHOUT
+dnl Jack Moffitt <jack@icecast.org> 08-06-2001
+dnl Rewritten for libshout 2
+dnl Brendan Cully <brendan@xiph.org> 20030612
+dnl 
+dnl $Id$
+
+# XIPH_PATH_SHOUT([ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])
+# Test for libshout, and define SHOUT_CPPFLAGS SHOUT_CFLAGS SHOUT_LIBS, and
+# SHOUT_THREADSAFE
+AC_DEFUN([XIPH_PATH_SHOUT],
+[dnl
+xt_have_shout="no"
+SHOUT_THREADSAFE="no"
+SHOUT_CPPFLAGS=""
+SHOUT_CFLAGS=""
+SHOUT_LIBS=""
+
+# NB: PKG_CHECK_MODULES exits if pkg-config is unavailable on the target
+# system, so we can't use it.
+
+# seed pkg-config with the default libshout location
+PKG_CONFIG_PATH=${PKG_CONFIG_PATH:-/usr/local/lib/pkgconfig}
+export PKG_CONFIG_PATH
+
+# Step 1: Use pkg-config if available
+AC_PATH_PROG([PKGCONFIG], [pkg-config], [no])
+if test "$PKGCONFIG" != "no" && `$PKGCONFIG --exists shout`
+then
+  SHOUT_CFLAGS=`$PKGCONFIG --variable=cflags_only shout`
+  SHOUT_CPPFLAGS=`$PKGCONFIG --variable=cppflags shout`
+  SHOUT_LIBS=`$PKGCONFIG --libs shout`
+  xt_have_shout="maybe"
+else
+  if test "$PKGCONFIG" != "no"
+  then
+    AC_MSG_NOTICE([$PKGCONFIG could not find libshout. Try adjusting PKG_CONFIG_PATH.])
+  fi
+  # pkg-config unavailable, try shout-config
+  AC_PATH_PROG([SHOUTCONFIG], [shout-config], [no])
+  if test "$SHOUTCONFIG" != "no" && test `$SHOUTCONFIG --package` = "libshout"
+  then
+    SHOUT_CPPFLAGS=`$SHOUTCONFIG --cppflags`
+    SHOUT_CFLAGS=`$SHOUTCONFIG --cflags-only`
+    SHOUT_LIBS=`$SHOUTCONFIG --libs`
+    xt_have_shout="maybe"
+  fi
+fi
+
+# Now try actually using libshout
+if test "$xt_have_shout" != "no"
+then
+  ac_save_CPPFLAGS="$CPPFLAGS"
+  ac_save_CFLAGS="$CFLAGS"
+  ac_save_LIBS="$LIBS"
+  CPPFLAGS="$CPPFLAGS $SHOUT_CPPFLAGS"
+  CFLAGS="$CFLAGS $SHOUT_CFLAGS"
+  LIBS="$SHOUT_LIBS $LIBS"
+  AC_CHECK_HEADERS([shoutidjc/shout.h], [
+    AC_CHECK_FUNC([shout_new], [
+      ifelse([$1], , :, [$1])
+      xt_have_shout="yes"
+    ])
+    AC_EGREP_CPP([yes], [#include <shoutidjc/shout.h>
+#if SHOUT_THREADSAFE
+yes
+#endif
+], [SHOUT_THREADSAFE="yes"])
+  ])
+  CPPFLAGS="$ac_save_CPPFLAGS"
+  CFLAGS="$ac_save_CFLAGS"
+  LIBS="$ac_save_LIBS"
+fi
+
+if test "$xt_have_shout" != "yes"
+then
+  ifelse([$2], , :, [$2])
+fi
+])dnl XIPH_PATH_SHOUT
-- 
2.7.2

