diff --git a/CMakeLists.txt b/CMakeLists.txt
index e2e91f3fe..7feb7a9e5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -142,27 +142,13 @@ if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "GNU")
       endif()
 endif ("${CMAKE_CXX_COMPILER_ID}" MATCHES "GNU")
 
-if (APPLE)
-   set(CMAKE_CXX_FLAGS_DEBUG   "-std=c++11 -fPIC -stdlib=libc++ -g -Wno-inconsistent-missing-override")
-   set(CMAKE_CXX_FLAGS_RELEASE "-std=c++11 -fPIC -stdlib=libc++ -O2 -DNDEBUG -DQT_NO_DEBUG -Wno-inconsistent-missing-override")
-   # This is necessary for genManual to be executed during the build phase,
-   # it needs to be able to get the Qt libs.
-   SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
-   SET(CMAKE_INSTALL_RPATH "${QT_INSTALL_PREFIX}/lib")
-else (APPLE)
-   if (MINGW)
-      # -mno-ms-bitfields see #22048
-      set(CMAKE_CXX_FLAGS_DEBUG   "-std=c++11 -mno-ms-bitfields -g")
-      set(CMAKE_CXX_FLAGS_RELEASE "-std=c++11 -mno-ms-bitfields -O2 -DNDEBUG -DQT_NO_DEBUG")
-      set(CMAKE_EXE_LINKER_FLAGS "-Wl,--large-address-aware")
-   else (MINGW)
-      set(CMAKE_CXX_FLAGS_DEBUG   "-std=gnu++11 -fPIC -g -Wall -Wextra -Woverloaded-virtual")
-      set(CMAKE_CXX_FLAGS_RELEASE "-std=gnu++11 -fPIC -O2 -DNDEBUG -DQT_NO_DEBUG -DQT_NO_DEBUG_OUTPUT")
-   endif (MINGW)
-endif(APPLE)
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -DNDEBUG -DQT_NO_DEBUG -DQT_NO_DEBUG_OUTPUT")
+set(CMAKE_CXX_STANDARD 11)
+set(CMAKE_CXX_STANDARD_REQUIRED ON)
+set(CMAKE_CXX_EXTENSIONS ON)
 
 set(CMAKE_INCLUDE_CURRENT_DIR TRUE)
-set(CMAKE_BUILD_WITH_INSTALL_RPATH ON) # Call CMake with option -DCMAKE_SKIP_RPATH to not set RPATH (Debian packaging requirement)
+set(CMAKE_BUILD_WITH_INSTALL_RPATH OFF) # Call CMake with option -DCMAKE_SKIP_RPATH to not set RPATH (Debian packaging requirement)
 set(CMAKE_SKIP_RULE_DEPENDENCY TRUE)
 
 # The MuseScore version number.
@@ -415,7 +401,6 @@ if (NOT MINGW AND NOT APPLE)
     #     set library search path for runtime linker to load the same
     #     qt libraries as we used at compile time
     #
-    SET(CMAKE_INSTALL_RPATH "${_qt5Core_install_prefix}/lib") # Ignored if CMAKE_SKIP_RPATH="TRUE"
     string(TOUPPER "mscore${MSCORE_INSTALL_SUFFIX}" MAN_MSCORE_UPPER) # Command name shown in uppercase in man pages by convention
     if (${MSCORE_INSTALL_SUFFIX} MATCHES "portable") # Note: "-portable-anything" would match
       # Build portable AppImage as per https://github.com/probonopd/AppImageKit
@@ -519,9 +504,6 @@ add_custom_command(
     DEPENDS ${PROJECT_SOURCE_DIR}/all.h
     WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
     )
-if (NOT MINGW)
-  set(BUILD_PCH true)
-endif(NOT MINGW)
 
 precompiled_header(QT_INCLUDES all ${BUILD_PCH})
 
diff --git a/aeolus/CMakeLists.txt b/aeolus/CMakeLists.txt
index 7962e8781..bdcb08dae 100644
--- a/aeolus/CMakeLists.txt
+++ b/aeolus/CMakeLists.txt
@@ -43,7 +43,7 @@ add_library (aeolus STATIC
 set_target_properties (
       aeolus
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
       )
 
 install(DIRECTORY
diff --git a/audiofile/CMakeLists.txt b/audiofile/CMakeLists.txt
index 5b1dd48ee..264a14a17 100644
--- a/audiofile/CMakeLists.txt
+++ b/audiofile/CMakeLists.txt
@@ -26,7 +26,7 @@ add_library (audiofile STATIC
 set_target_properties (
       audiofile
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
       )
 
 xcode_pch(audiofile all)
diff --git a/awl/CMakeLists.txt b/awl/CMakeLists.txt
index bcf5427b7..fec81d8b3 100644
--- a/awl/CMakeLists.txt
+++ b/awl/CMakeLists.txt
@@ -43,7 +43,7 @@ add_library (
 set_target_properties (
       awl
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
       )
 
 xcode_pch(awl all)
diff --git a/build/CreatePrecompiledHeader.cmake b/build/CreatePrecompiledHeader.cmake
index 72faba0de..8f9d2636c 100644
--- a/build/CreatePrecompiledHeader.cmake
+++ b/build/CreatePrecompiledHeader.cmake
@@ -36,7 +36,7 @@ macro( precompiled_header includes header_name build_pch)
             set (PCH ${PROJECT_BINARY_DIR}/${header_name}.h.gch)
             add_custom_command(
              OUTPUT ${PROJECT_BINARY_DIR}/${header_name}.h.gch
-             COMMAND ${CMAKE_CXX_COMPILER} -x c++-header -g  ${compile_flags} -o ${header_name}.h.gch ${header_name}.h
+             COMMAND ${CMAKE_CXX_COMPILER} -x c++-header ${compile_flags} -o ${header_name}.h.gch ${header_name}.h
              DEPENDS ${PROJECT_BINARY_DIR}/${header_name}.h
              WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
              VERBATIM
diff --git a/bww2mxml/CMakeLists.txt b/bww2mxml/CMakeLists.txt
index d6b779465..ad7815358 100644
--- a/bww2mxml/CMakeLists.txt
+++ b/bww2mxml/CMakeLists.txt
@@ -49,7 +49,7 @@ if (NOT MINGW AND NOT APPLE)
    set_target_properties (
          bww2mxml
          PROPERTIES
-            COMPILE_FLAGS "-x c++ -include ${PROJECT_BINARY_DIR}/all.h -g -Wall -Wextra -Winvalid-pch"
+            COMPILE_FLAGS "-x c++ -include ${PROJECT_BINARY_DIR}/all.h -fPIC -Wall -Wextra -Winvalid-pch"
          )
 
    target_link_libraries(bww2mxml
diff --git a/effects/CMakeLists.txt b/effects/CMakeLists.txt
index a695f1d5e..1f34fafce 100644
--- a/effects/CMakeLists.txt
+++ b/effects/CMakeLists.txt
@@ -44,7 +44,7 @@ add_library (effects STATIC
 set_target_properties (
       effects
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
       )
 
 xcode_pch(effects all)
diff --git a/fluid/CMakeLists.txt b/fluid/CMakeLists.txt
index 1dc8d2f8d..99f8f574e 100644
--- a/fluid/CMakeLists.txt
+++ b/fluid/CMakeLists.txt
@@ -45,7 +45,7 @@ add_library (fluid STATIC
 set_target_properties (
       fluid
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
       )
 
 xcode_pch(fluid all)
diff --git a/fonttools/CMakeLists.txt b/fonttools/CMakeLists.txt
index 74a525ba3..2cc008495 100644
--- a/fonttools/CMakeLists.txt
+++ b/fonttools/CMakeLists.txt
@@ -19,5 +19,5 @@ add_executable(
       )
 
 target_link_libraries(genft ${QT_LIBRARIES} -lfreetype)
-set_target_properties(genft PROPERTIES COMPILE_FLAGS "-I/usr/include/freetype2 -g -Wall -Wextra -Winvalid-pch")
+set_target_properties(genft PROPERTIES COMPILE_FLAGS "-I/usr/include/freetype2 -fPIC -Wall -Wextra -Winvalid-pch")
 
diff --git a/libmscore/CMakeLists.txt b/libmscore/CMakeLists.txt
index 6c7e07a3a..000c9c929 100644
--- a/libmscore/CMakeLists.txt
+++ b/libmscore/CMakeLists.txt
@@ -73,7 +73,7 @@ add_library (
 set_target_properties (
       libmscore
       PROPERTIES
-         COMPILE_FLAGS "-g ${PCH_INCLUDE} -Wall -Wextra -Winvalid-pch -Woverloaded-virtual"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch -Woverloaded-virtual"
       )
 
 xcode_pch(libmscore all)
diff --git a/manual/CMakeLists.txt b/manual/CMakeLists.txt
index cf6edcaed..9eb84926c 100644
--- a/manual/CMakeLists.txt
+++ b/manual/CMakeLists.txt
@@ -36,13 +36,13 @@ if(APPLE)
 set_target_properties (
       genManual
       PROPERTIES
-      COMPILE_FLAGS "-include all.h -D TESTROOT=\\\\\"${PROJECT_SOURCE_DIR}\\\\\" -g -Wall -Wextra"
+      COMPILE_FLAGS "-include all.h -D TESTROOT=\\\\\"${PROJECT_SOURCE_DIR}\\\\\" -fPIC -Wall -Wextra"
       )
 else(APPLE)
 set_target_properties (
       genManual
       PROPERTIES
-      COMPILE_FLAGS "-include all.h -D TESTROOT=\\\"${PROJECT_SOURCE_DIR}\\\" -g -Wall -Wextra"
+      COMPILE_FLAGS "-include all.h -D TESTROOT=\\\"${PROJECT_SOURCE_DIR}\\\" -fPIC -Wall -Wextra"
       )
 endif(APPLE)
 
diff --git a/midi/CMakeLists.txt b/midi/CMakeLists.txt
index 05fbb83d5..bf79c9e3f 100644
--- a/midi/CMakeLists.txt
+++ b/midi/CMakeLists.txt
@@ -27,7 +27,7 @@ add_library (midi STATIC
 set_target_properties (
       midi
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
       )
 
 xcode_pch(midi all)
diff --git a/miditools/CMakeLists.txt b/miditools/CMakeLists.txt
index 6df79c41b..e3bdb90b8 100644
--- a/miditools/CMakeLists.txt
+++ b/miditools/CMakeLists.txt
@@ -13,7 +13,7 @@
 add_executable (smf2xml smf2xml.cpp xmlwriter.cpp midifile.cpp)
 
 set_target_properties(smf2xml
-      PROPERTIES COMPILE_FLAGS "-g -Wall -Wextra"
+      PROPERTIES COMPILE_FLAGS "-fPIC -Wall -Wextra"
       )
 target_link_libraries(smf2xml
       ${QT_LIBRARIES}
@@ -23,7 +23,7 @@ add_executable (xml2smf xml2smf.cpp xmlreader.cpp midifile.cpp)
 
 set_target_properties (
       xml2smf
-      PROPERTIES COMPILE_FLAGS "-g -Wall -Wextra"
+      PROPERTIES COMPILE_FLAGS "-fPIC -Wall -Wextra"
       )
 target_link_libraries(xml2smf
       ${QT_LIBRARIES}
diff --git a/mscore/CMakeLists.txt b/mscore/CMakeLists.txt
index cd1045aa9..1b2c3a0eb 100644
--- a/mscore/CMakeLists.txt
+++ b/mscore/CMakeLists.txt
@@ -381,13 +381,13 @@ if (MINGW)
    if(CMAKE_BUILD_TYPE MATCHES "DEBUG")
      set_target_properties( mscore
         PROPERTIES
-           COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch ${QT_DEFINITIONS} -DQT_SVG_LIB -DQT_GUI_LIB -DQT_XML_LIB -DQT_CORE_LIB"
+           COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch ${QT_DEFINITIONS} -DQT_SVG_LIB -DQT_GUI_LIB -DQT_XML_LIB -DQT_CORE_LIB"
            LINK_FLAGS "${PROJECT_BINARY_DIR}/resfile.o -mwindows -mconsole -L ${CROSSQT}/lib"
         )
    else(CMAKE_BUILD_TYPE MATCHES "DEBUG")
      set_target_properties( mscore
           PROPERTIES
-             COMPILE_FLAGS "${PCH_INCLUDE} -Wall -Wextra -Winvalid-pch ${QT_DEFINITIONS} -DQT_SVG_LIB -DQT_GUI_LIB -DQT_XML_LIB -DQT_CORE_LIB"
+             COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch ${QT_DEFINITIONS} -DQT_SVG_LIB -DQT_GUI_LIB -DQT_XML_LIB -DQT_CORE_LIB"
              LINK_FLAGS "-Wl,-S ${PROJECT_BINARY_DIR}/resfile.o -mwindows -L ${CROSSQT}/lib"
           )
    endif(CMAKE_BUILD_TYPE MATCHES "DEBUG")
@@ -507,7 +507,7 @@ else (MINGW)
    set_target_properties (
       mscore
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wno-overloaded-virtual -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wno-overloaded-virtual -Winvalid-pch"
       )
 
    if (OMR)
diff --git a/mstyle/CMakeLists.txt b/mstyle/CMakeLists.txt
index 2bc43c4bd..3fb96fcfa 100644
--- a/mstyle/CMakeLists.txt
+++ b/mstyle/CMakeLists.txt
@@ -49,7 +49,7 @@ add_library (
 set_target_properties (
       mstyle
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch -Wno-overloaded-virtual"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch -Wno-overloaded-virtual"
       )
 
 xcode_pch(mstyle all)
diff --git a/mtest/CMakeLists.txt b/mtest/CMakeLists.txt
index c0486679a..42f14301d 100644
--- a/mtest/CMakeLists.txt
+++ b/mtest/CMakeLists.txt
@@ -113,20 +113,10 @@ target_link_libraries(
 
 set(CMAKE_CXX_FLAGS         "${CMAKE_CXX_FLAGS} ${Qt5Widgets_EXECUTABLE_COMPILE_FLAGS}")
 
-if (APPLE)
-   set(CMAKE_CXX_FLAGS_DEBUG   "-std=c++0x -fPIC -stdlib=libc++ -g -Wno-inconsistent-missing-override")
-   set(CMAKE_CXX_FLAGS_RELEASE "-std=c++0x -fPIC -stdlib=libc++ -O2 -DNDEBUG -DQT_NO_DEBUG -Wno-inconsistent-missing-override")
-else (APPLE)
-   if (MINGW)
-      # -mno-ms-bitfields see #22048
-      set(CMAKE_CXX_FLAGS_DEBUG   "-std=gnu++0x -mno-ms-bitfields -g")
-      set(CMAKE_CXX_FLAGS_RELEASE "-std=gnu++0x -mno-ms-bitfields -O2 -DNDEBUG -DQT_NO_DEBUG")
-   else (MINGW)
-      set(CMAKE_CXX_FLAGS_DEBUG   "-std=gnu++0x -fPIC -g")
-      set(CMAKE_CXX_FLAGS_RELEASE "-std=gnu++0x -fPIC -O2 -DNDEBUG -DQT_NO_DEBUG -DQT_NO_DEBUG_OUTPUT")
-   endif (MINGW)
-endif(APPLE)
-
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -DNDEBUG -DQT_NO_DEBUG -DQT_NO_DEBUG_OUTPUT")
+set(CMAKE_CXX_STANDARD 11)
+set(CMAKE_CXX_STANDARD_REQUIRED ON)
+set(CMAKE_CXX_EXTENSIONS ON)
 
 string(REPLACE ";" ";-I" INC "${QT_INCLUDES}")
 
@@ -134,17 +124,17 @@ if (APPLE AND (CMAKE_VERSION VERSION_LESS "3.5.0"))
 set_target_properties (
       testutils
       PROPERTIES
-      COMPILE_FLAGS "-include all.h -D TESTROOT=\\\\\"${PROJECT_SOURCE_DIR}\\\\\" -g -Wall -Wextra"
+      COMPILE_FLAGS "-include all.h -D TESTROOT=\\\\\"${PROJECT_SOURCE_DIR}\\\\\" -fPIC -Wall -Wextra"
       )
 else (APPLE AND (CMAKE_VERSION VERSION_LESS "3.5.0"))
 set_target_properties (
       testutils
       PROPERTIES
-      COMPILE_FLAGS "-include all.h -D TESTROOT=\\\"${PROJECT_SOURCE_DIR}\\\" -g -Wall -Wextra"
+      COMPILE_FLAGS "-include all.h -D TESTROOT=\\\"${PROJECT_SOURCE_DIR}\\\" -fPIC -Wall -Wextra"
       )
 endif (APPLE AND (CMAKE_VERSION VERSION_LESS "3.5.0"))
 
-#      COMPILE_FLAGS "-include all.h -I ${INC} -D TESTROOT=\\\"${PROJECT_SOURCE_DIR}\\\" -g -Wall -Wextra"
+#      COMPILE_FLAGS "-include all.h -I ${INC} -D TESTROOT=\\\"${PROJECT_SOURCE_DIR}\\\" -fPIC -Wall -Wextra"
 
 add_custom_target(report
       COMMAND ant -f ${PROJECT_SOURCE_DIR}/mtest/build.xml -Droot.dir=${PROJECT_BINARY_DIR}/mtest report
diff --git a/mtest/cmake.inc b/mtest/cmake.inc
index 943b85e5f..35b04f51e 100644
--- a/mtest/cmake.inc
+++ b/mtest/cmake.inc
@@ -60,16 +60,16 @@ set_target_properties (
       ${TARGET}
       PROPERTIES
       AUTOMOC true
-      COMPILE_FLAGS "-include all.h -D QT_GUI_LIB -D TESTROOT=\\\"${PROJECT_SOURCE_DIR}\\\" -g -Wall -Wextra"
-      LINK_FLAGS    "-g -stdlib=libc++"
+      COMPILE_FLAGS "-include all.h -D QT_GUI_LIB -D TESTROOT=\\\"${PROJECT_SOURCE_DIR}\\\" -fPIC -Wall -Wextra"
+      LINK_FLAGS    "-stdlib=libc++"
       )
 else(APPLE)
 set_target_properties (
       ${TARGET}
       PROPERTIES
       AUTOMOC true
-      COMPILE_FLAGS "-include all.h -D QT_GUI_LIB -D TESTROOT=\\\"${PROJECT_SOURCE_DIR}\\\" -g -Wall -Wextra"
-      LINK_FLAGS    "-g"
+      COMPILE_FLAGS "-include all.h -D QT_GUI_LIB -D TESTROOT=\\\"${PROJECT_SOURCE_DIR}\\\" -fPIC -Wall -Wextra"
+      LINK_FLAGS    ""
       )
 endif(APPLE)
 
@@ -77,7 +77,7 @@ if (APPLE AND (CMAKE_VERSION VERSION_LESS "3.5.0"))
 set_target_properties (
       ${TARGET}
       PROPERTIES
-      COMPILE_FLAGS "-include all.h -D QT_GUI_LIB -D TESTROOT=\\\\\"${PROJECT_SOURCE_DIR}\\\\\" -g -Wall -Wextra"
+      COMPILE_FLAGS "-include all.h -D QT_GUI_LIB -D TESTROOT=\\\\\"${PROJECT_SOURCE_DIR}\\\\\" -fPIC -Wall -Wextra"
       )
 endif (APPLE AND (CMAKE_VERSION VERSION_LESS "3.5.0"))
 
diff --git a/omr/CMakeLists.txt b/omr/CMakeLists.txt
index 9ad57b930..caf9a3624 100644
--- a/omr/CMakeLists.txt
+++ b/omr/CMakeLists.txt
@@ -42,7 +42,7 @@ add_library (
 set_target_properties (
       omr
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch -Wno-unused-private-field"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch -Wno-unused-private-field"
       )
 
 xcode_pch(omr all)
diff --git a/synthesizer/CMakeLists.txt b/synthesizer/CMakeLists.txt
index 0520920cf..e0a1aa7a1 100644
--- a/synthesizer/CMakeLists.txt
+++ b/synthesizer/CMakeLists.txt
@@ -29,7 +29,7 @@ add_library (synthesizer STATIC
 set_target_properties (
       synthesizer
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
       )
 
 xcode_pch(synthesizer all)
diff --git a/thirdparty/beatroot/CMakeLists.txt b/thirdparty/beatroot/CMakeLists.txt
index ae905c735..f0fb50a40 100644
--- a/thirdparty/beatroot/CMakeLists.txt
+++ b/thirdparty/beatroot/CMakeLists.txt
@@ -14,7 +14,7 @@ add_library (
 
 set_target_properties( beatroot
    PROPERTIES
-      COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+      COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
    )
 
 xcode_pch(beatroot all)
diff --git a/thirdparty/diff/CMakeLists.txt b/thirdparty/diff/CMakeLists.txt
index d0155b214..3985868bb 100644
--- a/thirdparty/diff/CMakeLists.txt
+++ b/thirdparty/diff/CMakeLists.txt
@@ -36,7 +36,7 @@ add_library(diff_match_patch STATIC
 set_target_properties (
       diff_match_patch
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
       )
 
 xcode_pch(diff_match_patch all)
diff --git a/thirdparty/kQOAuth/CMakeLists.txt b/thirdparty/kQOAuth/CMakeLists.txt
index 9beb6b1f2..f452df5de 100644
--- a/thirdparty/kQOAuth/CMakeLists.txt
+++ b/thirdparty/kQOAuth/CMakeLists.txt
@@ -40,7 +40,7 @@ add_library(kqoauth STATIC
 set_target_properties (
       kqoauth
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -I ${PROJECT_SOURCE_DIR}/thirdparty/openssl/include -g -Wall -Wextra -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -I ${PROJECT_SOURCE_DIR}/thirdparty/openssl/include -fPIC -Wall -Wextra -Winvalid-pch"
       )
 
 xcode_pch(kqoauth all)
diff --git a/thirdparty/ofqf/CMakeLists.txt b/thirdparty/ofqf/CMakeLists.txt
index fc39a0aa1..9200dd312 100644
--- a/thirdparty/ofqf/CMakeLists.txt
+++ b/thirdparty/ofqf/CMakeLists.txt
@@ -36,7 +36,7 @@ add_library(ofqf STATIC
 set_target_properties (
       ofqf
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
       )
 
 xcode_pch(ofqf all)
diff --git a/thirdparty/poppler/CMakeLists.txt b/thirdparty/poppler/CMakeLists.txt
index 943cca72e..20f336087 100644
--- a/thirdparty/poppler/CMakeLists.txt
+++ b/thirdparty/poppler/CMakeLists.txt
@@ -134,12 +134,12 @@ add_library(poppler STATIC
    )
 
 if (APPLE)
-   set ( POPPLER_COMPILE_FLAGS "-O2 -Wno-unknown-warning-option -Wno-write-strings -ansi -Wnon-virtual-dtor -Woverloaded-virtual -Wno-unused-private-field -Wno-return-stack-address -Wno-shift-negative-value -std=c++11")
+   set ( POPPLER_COMPILE_FLAGS "-O2 -fPIC -Wno-unknown-warning-option -Wno-write-strings -ansi -Wnon-virtual-dtor -Woverloaded-virtual -Wno-unused-private-field -Wno-return-stack-address -Wno-shift-negative-value -std=c++11")
 else (APPLE)
    if (MINGW)
-      set (POPPLER_COMPILE_FLAGS "-O2 -Wall -Wextra -Wno-write-strings -ansi -Wnon-virtual-dtor -Woverloaded-virtual -Wno-unused-parameter -Wno-missing-field-initializers -Wno-unused-but-set-variable -Wno-format -std=c++11")
+      set (POPPLER_COMPILE_FLAGS "-O2 -fPIC -Wall -Wextra -Wno-write-strings -ansi -Wnon-virtual-dtor -Woverloaded-virtual -Wno-unused-parameter -Wno-missing-field-initializers -Wno-unused-but-set-variable -Wno-format -std=c++11")
    else (MINGW)
-      set (POPPLER_COMPILE_FLAGS "-O2 -Wno-write-strings -ansi -Wnon-virtual-dtor -Woverloaded-virtual -Wno-unused-parameter -Wno-missing-field-initializers -Wno-unused-but-set-variable -std=c++11")
+      set (POPPLER_COMPILE_FLAGS "-O2 -fPIC -Wno-write-strings -ansi -Wnon-virtual-dtor -Woverloaded-virtual -Wno-unused-parameter -Wno-missing-field-initializers -Wno-unused-but-set-variable -std=c++11")
    endif(MINGW)
 endif(APPLE)
 
diff --git a/thirdparty/qzip/CMakeLists.txt b/thirdparty/qzip/CMakeLists.txt
index 77b19979e..b1b4cb841 100644
--- a/thirdparty/qzip/CMakeLists.txt
+++ b/thirdparty/qzip/CMakeLists.txt
@@ -29,7 +29,7 @@ add_library(qzip STATIC
 set_target_properties (
       qzip
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
       )
 
 xcode_pch(qzip all)
diff --git a/thirdparty/rtf2html/CMakeLists.txt b/thirdparty/rtf2html/CMakeLists.txt
index 230339bde..c052605e2 100644
--- a/thirdparty/rtf2html/CMakeLists.txt
+++ b/thirdparty/rtf2html/CMakeLists.txt
@@ -37,7 +37,7 @@ add_library (
 
 set_target_properties( rtf2html
    PROPERTIES
-      COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+      COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
    )
 
 xcode_pch(rtf2html all)
diff --git a/thirdparty/singleapp/src/CMakeLists.txt b/thirdparty/singleapp/src/CMakeLists.txt
index 2504b017e..722e5d553 100644
--- a/thirdparty/singleapp/src/CMakeLists.txt
+++ b/thirdparty/singleapp/src/CMakeLists.txt
@@ -31,7 +31,7 @@ add_library (
 set_target_properties (
   qtsingleapp
   PROPERTIES
-  COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+  COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
   )
 
 xcode_pch(qtsingleapp all)
diff --git a/thirdparty/xmlstream/CMakeLists.txt b/thirdparty/xmlstream/CMakeLists.txt
index 5991e09e5..7e6db93ed 100644
--- a/thirdparty/xmlstream/CMakeLists.txt
+++ b/thirdparty/xmlstream/CMakeLists.txt
@@ -29,7 +29,7 @@ add_library(xmlstream STATIC
 set_target_properties (
       xmlstream
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
       )
 
 xcode_pch(xmlstream all)
diff --git a/zerberus/CMakeLists.txt b/zerberus/CMakeLists.txt
index c0db57150..52090bd57 100644
--- a/zerberus/CMakeLists.txt
+++ b/zerberus/CMakeLists.txt
@@ -31,7 +31,7 @@ add_library (zerberus STATIC
 set_target_properties (
       zerberus
       PROPERTIES
-         COMPILE_FLAGS "${PCH_INCLUDE} -g -Wall -Wextra -Winvalid-pch"
+         COMPILE_FLAGS "${PCH_INCLUDE} -fPIC -Wall -Wextra -Winvalid-pch"
       )
 
 xcode_pch(zerberus all)
